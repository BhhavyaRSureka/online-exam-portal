// ********RoostGPT********
// Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
import request from 'supertest';
import express from 'express';

const app = express();

// Error handler middleware to be tested
app.use((err, req, res, next) => {
  console.error(err);
  res.status(err.status).json({
    success: false,
    message: err.message
  });
});

// Dummy endpoint to trigger errors
app.get('/error', (req, res, next) => {
  const err = new Error('Intentional error');
  err.status = 500;
  next(err);
});

let server;

// Test suite for error handler
describe('Error Handler Middleware', () => {
  beforeAll(() => {
    server = app.listen(4000);
  });

  afterAll((done) => {
    server.close(done);
  });

  test('responds with JSON error for thrown error', async () => {
    const response = await request(server).get('/error');
    expect(response.status).toBe(500);
    expect(response.body).toEqual({
      success: false,
      message: 'Intentional error'
    });
    expect(response.header['content-type']).toMatch(/json/);
  });

  test('responds with correct status code for custom error status', async () => {
    const customErrorHandler = (req, res, next) => {
      const err = new Error('Custom error');
      err.status = 400;
      next(err);
    };
    app.get('/custom-error', customErrorHandler);

    const response = await request(server).get('/custom-error');
    expect(response.status).toBe(400);
    expect(response.body).toEqual({
      success: false,
      message: 'Custom error'
    });
  });
});

