// ********RoostGPT********
// Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
const httpMocks = require('node-mocks-http');
const adminController = require('./admin');
const jest = require('jest');

describe('adminDetails Method', () => {
    let req, res, next;

    beforeEach(() => {
        req = httpMocks.createRequest();
        res = httpMocks.createResponse();
        next = jest.fn();
    });

    test('Should respond with success true and user details if user is present in req', () => {
        req.user = { username: 'adminUser', _id: '12345' };
        adminController.adminDetails(req, res, next);
        
        expect(res.statusCode).toBe(200);
        expect(res._getJSONData()).toEqual({
            success: true,
            user: {
                username: 'adminUser',
                _id: '12345'
            }
        });
        expect(next).not.toHaveBeenCalled(); // next should not be called
    });

    test('Should respond with success false and empty user object if user is not present in req', () => {
        adminController.adminDetails(req, res, next);
        
        expect(res.statusCode).toBe(200);
        expect(res._getJSONData()).toEqual({
            success: false,
            user: {}
        });
        expect(next).not.toHaveBeenCalled(); // next should not be called
    });
});

