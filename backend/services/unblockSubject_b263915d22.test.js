// ********RoostGPT********
// Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
const httpMocks = require('node-mocks-http');
const adminController = require('../controllers/adminController'); // Assume the correct path to the adminController
const subjectModel = require('../models/subject');

// Jest setup is implied to be present here
// e.g., jest.mock, expect, test, describe, beforeEach, etc.

jest.mock('../models/subject');

let req, res, next;

beforeEach(() => {
  req = httpMocks.createRequest();
  res = httpMocks.createResponse();
  next = jest.fn();
});

describe('unblockSubject', () => {
  beforeEach(() => {
    req.user = {};
  });

  it('should return 401 Unauthorized if not signed in', async () => {
    req.user = null;
    await adminController.unblockSubject(req, res, next);

    expect(res.statusCode).toBe(401);
    expect(res._isEndCalled()).toBeTruthy();
    expect(res._getData()).toContain('"success":false');
    expect(res._getData()).toContain('"message":"Permissions not granted!"');
  });

  it('should unblock subject successfully', async () => {
    req.body._id = 'subjectId1';
    subjectModel.findOneAndUpdate.mockResolvedValue({
      status: true
    });

    await adminController.unblockSubject(req, res, next);

    expect(res.statusCode).toBe(200);
    expect(res._isEndCalled()).toBeTruthy();
    expect(res._getData()).toContain('"success":true');
    expect(res._getData()).toContain('"message":"Subject has been unblocked"');
  });

  it('should handle errors when unblocking the subject', async () => {
    req.body._id = 'subjectId2';
    const errorMessage = { message: 'Unable to unblock subject' };
    subjectModel.findOneAndUpdate.mockRejectedValue(errorMessage);

    await adminController.unblockSubject(req, res, next);

    expect(res.statusCode).toBe(500);
    expect(res._isEndCalled()).toBeTruthy();
    expect(res._getData()).toContain('"success":false');
    expect(res._getData()).toContain('"message":"Unable to unblock subject"');
  });
});

