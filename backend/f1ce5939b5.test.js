// ********RoostGPT********
// Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4-1106-preview



// ********RoostGPT********
/**
 * Jest test to verify 404 error handling in an Express app.
 */

// Mock external modules to avoid actual HTTP requests
jest.mock('supertest', () => require('jest-mock-request-response').supertest);
jest.mock('express', () => require('jest-mock-request-response').express);
jest.mock('http-errors', () => require('jest-mock-request-response').createError);

// Import the necessary modules for the test
const request = require('supertest');
const express = require('express');
const createError = require('http-errors');

// Initialize the express application
const app = express();

// Middleware that creates a new error for non-existing APIs
app.use((req, res, next) => {
  next(createError(404, "Invalid API. Use the official documentation to get the list of valid APIS."));
});

// Error handling middleware
app.use((err, req, res, next) => {
  res.status(err.status || 500).json({
    error: {
      status: err.status,
      message: err.message,
    },
  });
});

describe('404 Error Handling', () => {
  it('should respond with 404 for an invalid API path', async () => {
    const response = await request(app).get('/nonexistentpath');
    expect(response.statusCode).toBe(404);
    expect(response.body).toEqual({
      error: {
        status: 404,
        message: "Invalid API. Use the official documentation to get the list of valid APIS."
      },
    });
  });
});

